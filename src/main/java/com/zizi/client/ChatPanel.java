package com.zizi.client;

import com.zizi.server.TextMessage;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;

/**
 * The chat panel where messages are displayed.
 */
public class ChatPanel extends javax.swing.JPanel implements MessageReceiver {

    /**
     * Creates new form ChatPanel
     */
    public ChatPanel() {
        initComponents();
    }

    @Override
    public void messageReceived(TextMessage message) {

        String msg = "<html>"
                + "<body>"
                + "<h2>Me: (" + message.getFromUser().getName() + ")  </h2>" + message.getText()
                + "</body>"
                + "</html>";
        JLabel label = new JLabel(msg);
        Border border = BorderFactory.createEtchedBorder(EtchedBorder.LOWERED);
        label.setBorder(border);
        chatPanel.add(label);
        this.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        sendTextBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        chatPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(106, 99, 92));

        txtMessage.setColumns(20);
        txtMessage.setRows(3);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${textMessage}"), txtMessage, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(txtMessage);

        sendTextBtn.setText("Send");
        sendTextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendTextBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chatPanelLayout = new javax.swing.GroupLayout(chatPanel);
        chatPanel.setLayout(chatPanelLayout);
        chatPanelLayout.setHorizontalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );
        chatPanelLayout.setVerticalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(chatPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(sendTextBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sendTextBtn)
                        .addGap(13, 13, 13)))
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void sendTextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendTextBtnActionPerformed
        if (textMessage == null || textMessage.isEmpty() || messageSender == null) {
            return;
        }
        String msg = "<html>"
                + "<body>"
                + "<h2>Me: (" + messageSender.getCurrentUser().getName() + ")  </h2>" + textMessage
                + "</body>"
                + "</html>";
        JLabel label = new JLabel(msg);
        Border border = BorderFactory.createEtchedBorder(EtchedBorder.RAISED);
        label.setBorder(border);
        chatPanel.add(label);
        this.validate();
        messageSender.sendMessage(textMessage);
    }//GEN-LAST:event_sendTextBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chatPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton sendTextBtn;
    private javax.swing.JTextArea txtMessage;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //The message the user has typed on the box.
    private String textMessage;
    //The message sender to inform when the current user wants to send the message.
    private MessageSender messageSender;

    public void setMessageSender(MessageSender messageSender) {
        this.messageSender = messageSender;
    }

    public void setTextMessage(String textMessage) {
        this.textMessage = textMessage;
    }

    public String getTextMessage() {
        return textMessage;
    }

}
